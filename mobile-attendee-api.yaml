openapi: 3.0.3
info:
  title: Event Management Platform - Mobile Attendee API
  description: |
    Mobile-optimized API for event attendees with streamlined responses and mobile-specific features.
    
    ## Mobile Optimization Features
    - **Reduced Payload**: Filtered responses for mobile devices
    - **User-Agent Detection**: Automatic mobile response formatting
    - **Optimized Images**: Mobile-friendly image URLs
    - **Battery-Friendly**: Minimal data transfer
    
    ## Authentication
    - Bearer token authentication required for protected endpoints
    - Mobile-optimized login responses
    
    ## Usage
    Include `User-Agent` header with mobile device identifier for optimized responses.
  version: 1.0.0
  contact:
    name: Event Platform Support
    email: support@eventplatform.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.eventplatform.com/v1
    description: Production server
  - url: https://dev-api.eventplatform.com/v1
    description: Development server

security:
  - bearerAuth: []

paths:
  /health:
    get:
      summary: Health Check
      description: Check API health status
      tags:
        - System
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /auth/register:
    post:
      summary: Register Attendee (Mobile Optimized)
      description: Register a new attendee account with mobile-optimized response
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendeeRegistrationRequest'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileLoginResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      summary: Login Attendee (Mobile Optimized)
      description: Login with mobile-optimized response format
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              oneOf:
                - $ref: '#/components/schemas/MobileLoginResponse'
                - $ref: '#/components/schemas/LoginResponse'
          examples:
            mobile:
              summary: Mobile Response
              value:
                success: true
                data:
                  message: "Login successful"
                  user:
                    id: "user123"
                    email: "user@example.com"
                    firstName: "John"
                    lastName: "Doe"
                    profilePictureUrl: "https://cdn.example.com/mobile/profile.jpg"
                    role: "attendee"
                    status: "active"
                    preferences:
                      emailNotifications: true
                      pushNotifications: true
                      timezone: "America/Toronto"
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken: "refresh_token_here"
                  expiresIn: 3600
                timestamp: "2024-01-15T10:30:00Z"
            desktop:
              summary: Desktop Response
              value:
                success: true
                data:
                  message: "Login successful"
                  user:
                    id: "user123"
                    email: "user@example.com"
                    firstName: "John"
                    lastName: "Doe"
                    profilePictureUrl: "https://cdn.example.com/profile.jpg"
                    role: "attendee"
                    status: "active"
                    emailVerified: true
                    phoneVerified: false
                    createdAt: "2024-01-01T00:00:00Z"
                    updatedAt: "2024-01-15T10:30:00Z"
                    preferences:
                      emailNotifications: true
                      smsNotifications: false
                      pushNotifications: true
                      timezone: "America/Toronto"
                      language: "en"
                      currency: "CAD"
                      marketingEmails: true
                  accessToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  refreshToken: "refresh_token_here"
                  expiresIn: 3600
                timestamp: "2024-01-15T10:30:00Z"

  /auth/refresh:
    post:
      summary: Refresh Token
      description: Refresh access token using refresh token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /events:
    get:
      summary: Browse Events (Mobile Optimized)
      description: Get list of events with mobile-optimized response
      tags:
        - Events
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: Number of events per page
          required: false
          schema:
            type: integer
            default: 20
            maximum: 50
        - name: category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: Filter by location
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Filter by date (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileEventListResponse'

  /events/{eventId}:
    get:
      summary: Get Event Details (Mobile Optimized)
      description: Get detailed information about a specific event
      tags:
        - Events
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: string
      responses:
        '200':
          description: Event details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileEventResponse'
        '404':
          description: Event not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /events/categories:
    get:
      summary: Get Event Categories
      description: Get list of available event categories
      tags:
        - Events
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'

  /bookings:
    post:
      summary: Create Booking (Mobile Optimized)
      description: Create a new booking for an event
      tags:
        - Bookings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBookingRequest'
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileBookingResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /bookings/user:
    get:
      summary: Get User Bookings (Mobile Optimized)
      description: Get bookings for the authenticated user
      tags:
        - Bookings
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of bookings per page
          required: false
          schema:
            type: integer
            default: 10
            maximum: 20
        - name: status
          in: query
          description: Filter by booking status
          required: false
          schema:
            type: string
            enum: [active, cancelled, completed]
      responses:
        '200':
          description: User bookings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileBookingListResponse'

  /bookings/{bookingId}:
    get:
      summary: Get Booking Details (Mobile Optimized)
      description: Get detailed information about a specific booking
      tags:
        - Bookings
      parameters:
        - name: bookingId
          in: path
          required: true
          description: Booking ID
          schema:
            type: string
      responses:
        '200':
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileBookingResponse'
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /bookings/{bookingId}/cancel:
    post:
      summary: Cancel Booking
      description: Cancel an existing booking
      tags:
        - Bookings
      parameters:
        - name: bookingId
          in: path
          required: true
          description: Booking ID
          schema:
            type: string
      responses:
        '200':
          description: Booking cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelBookingResponse'

  /payments/process:
    post:
      summary: Process Payment (Mobile Optimized)
      description: Process payment for a booking
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessPaymentRequest'
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobilePaymentResponse'
        '400':
          description: Payment failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /payments/history:
    get:
      summary: Get Payment History (Mobile Optimized)
      description: Get payment history for the authenticated user
      tags:
        - Payments
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of payments per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Payment history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobilePaymentListResponse'

  /qr-codes/validate:
    post:
      summary: Validate QR Code
      description: Validate a QR code for event entry
      tags:
        - QR Codes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateQRCodeRequest'
      responses:
        '200':
          description: QR code validated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QRCodeValidationResponse'
        '400':
          description: Invalid QR code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /qr-codes/{bookingId}:
    get:
      summary: Get QR Code (Mobile Optimized)
      description: Get QR code for a booking
      tags:
        - QR Codes
      parameters:
        - name: bookingId
          in: path
          required: true
          description: Booking ID
          schema:
            type: string
      responses:
        '200':
          description: QR code data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileQRCodeResponse'
        '404':
          description: QR code not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notifications:
    get:
      summary: Get Notifications (Mobile Optimized)
      description: Get notifications for the authenticated user
      tags:
        - Notifications
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of notifications per page
          required: false
          schema:
            type: integer
            default: 20
        - name: unreadOnly
          in: query
          description: Get only unread notifications
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: User notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileNotificationListResponse'

  /notifications/{notificationId}/read:
    post:
      summary: Mark Notification as Read
      description: Mark a notification as read
      tags:
        - Notifications
      parameters:
        - name: notificationId
          in: path
          required: true
          description: Notification ID
          schema:
            type: string
      responses:
        '200':
          description: Notification marked as read
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationReadResponse'

  /search/events:
    get:
      summary: Search Events (Mobile Optimized)
      description: Search for events with mobile-optimized results
      tags:
        - Search
      parameters:
        - name: q
          in: query
          description: Search query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileEventListResponse'

  /search/trending:
    get:
      summary: Get Trending Events (Mobile Optimized)
      description: Get trending events with mobile optimization
      tags:
        - Search
      parameters:
        - name: limit
          in: query
          description: Number of trending events
          required: false
          schema:
            type: integer
            default: 10
            maximum: 20
        - name: period
          in: query
          description: Time period for trending calculation
          required: false
          schema:
            type: string
            enum: [day, week, month]
            default: week
      responses:
        '200':
          description: Trending events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileEventListResponse'

  /search/nearby:
    get:
      summary: Get Nearby Events (Mobile Optimized)
      description: Get events near a specific location
      tags:
        - Search
      parameters:
        - name: latitude
          in: query
          description: Latitude coordinate
          required: true
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Longitude coordinate
          required: true
          schema:
            type: number
            format: double
        - name: radius
          in: query
          description: Search radius in kilometers
          required: false
          schema:
            type: number
            default: 50
            maximum: 100
        - name: limit
          in: query
          description: Number of events to return
          required: false
          schema:
            type: integer
            default: 20
            maximum: 50
      responses:
        '200':
          description: Nearby events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MobileEventListResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Mobile-Optimized User Schemas
    MobileUser:
      type: object
      properties:
        id:
          type: string
          description: User ID
        email:
          type: string
          format: email
          description: User email
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        profilePictureUrl:
          type: string
          format: uri
          description: Profile picture URL (mobile-optimized)
        role:
          type: string
          enum: [attendee, organizer, admin]
          description: User role
        status:
          type: string
          enum: [active, suspended, inactive]
          description: User status
        preferences:
          $ref: '#/components/schemas/MobileUserPreferences'
      required:
        - id
        - email
        - firstName
        - lastName
        - role
        - status

    MobileUserPreferences:
      type: object
      properties:
        emailNotifications:
          type: boolean
          description: Email notification preference
        pushNotifications:
          type: boolean
          description: Push notification preference
        timezone:
          type: string
          description: User timezone
        language:
          type: string
          description: Preferred language
        currency:
          type: string
          description: Preferred currency

    # Mobile-Optimized Event Schemas
    MobileEvent:
      type: object
      properties:
        id:
          type: string
          description: Event ID
        title:
          type: string
          description: Event title
        description:
          type: string
          description: Event description
        startDate:
          type: string
          format: date-time
          description: Event start date
        endDate:
          type: string
          format: date-time
          description: Event end date
        location:
          $ref: '#/components/schemas/MobileLocation'
        category:
          $ref: '#/components/schemas/Category'
        maxAttendees:
          type: integer
          description: Maximum number of attendees
        currentAttendees:
          type: integer
          description: Current number of attendees
        ticketPrice:
          type: number
          format: float
          description: Ticket price
        currency:
          type: string
          description: Currency code
        status:
          type: string
          enum: [draft, published, cancelled, completed]
          description: Event status
        imageUrl:
          type: string
          format: uri
          description: Event image URL (mobile-optimized)
        tags:
          type: array
          items:
            type: string
          description: Event tags
        isVirtual:
          type: boolean
          description: Whether event is virtual
      required:
        - id
        - title
        - startDate
        - endDate
        - status

    MobileLocation:
      type: object
      properties:
        address:
          type: string
          description: Street address
        city:
          type: string
          description: City
        state:
          type: string
          description: State/province
        country:
          type: string
          description: Country
        zipCode:
          type: string
          description: ZIP/postal code
        latitude:
          type: number
          format: double
          description: Latitude coordinate
        longitude:
          type: number
          format: double
          description: Longitude coordinate

    # Mobile-Optimized Booking Schemas
    MobileBooking:
      type: object
      properties:
        id:
          type: string
          description: Booking ID
        eventId:
          type: string
          description: Event ID
        event:
          $ref: '#/components/schemas/MobileEvent'
        ticketQuantity:
          type: integer
          description: Number of tickets
        totalAmount:
          type: number
          format: float
          description: Total amount paid
        currency:
          type: string
          description: Currency code
        status:
          type: string
          enum: [pending, confirmed, cancelled, completed]
          description: Booking status
        bookingDate:
          type: string
          format: date-time
          description: Booking date
        qrCodeUrl:
          type: string
          format: uri
          description: QR code URL for entry
      required:
        - id
        - eventId
        - ticketQuantity
        - totalAmount
        - status

    # Mobile-Optimized Payment Schemas
    MobilePayment:
      type: object
      properties:
        id:
          type: string
          description: Payment ID
        bookingId:
          type: string
          description: Associated booking ID
        amount:
          type: number
          format: float
          description: Payment amount
        currency:
          type: string
          description: Currency code
        status:
          type: string
          enum: [pending, completed, failed, refunded]
          description: Payment status
        paymentMethod:
          type: string
          description: Payment method used
        transactionDate:
          type: string
          format: date-time
          description: Transaction date
      required:
        - id
        - bookingId
        - amount
        - currency
        - status

    # Mobile-Optimized QR Code Schemas
    MobileQRCode:
      type: object
      properties:
        id:
          type: string
          description: QR code ID
        bookingId:
          type: string
          description: Associated booking ID
        qrCodeData:
          type: string
          description: QR code data
        qrCodeUrl:
          type: string
          format: uri
          description: QR code image URL
        isValid:
          type: boolean
          description: Whether QR code is valid
        expiresAt:
          type: string
          format: date-time
          description: QR code expiration date
      required:
        - id
        - bookingId
        - qrCodeData
        - isValid

    # Mobile-Optimized Notification Schemas
    MobileNotification:
      type: object
      properties:
        id:
          type: string
          description: Notification ID
        title:
          type: string
          description: Notification title
        message:
          type: string
          description: Notification message
        type:
          type: string
          enum: [info, success, warning, error]
          description: Notification type
        isRead:
          type: boolean
          description: Whether notification is read
        createdAt:
          type: string
          format: date-time
          description: Notification creation date
        actionUrl:
          type: string
          format: uri
          description: Action URL (if applicable)
      required:
        - id
        - title
        - message
        - type
        - isRead

    # Request Schemas
    AttendeeRegistrationRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User email
        password:
          type: string
          minLength: 8
          description: User password
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        phone:
          type: string
          description: Phone number
      required:
        - email
        - password
        - firstName
        - lastName

    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User email
        password:
          type: string
          description: User password
      required:
        - email
        - password

    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
          description: Refresh token
      required:
        - refreshToken

    CreateBookingRequest:
      type: object
      properties:
        eventId:
          type: string
          description: Event ID
        ticketQuantity:
          type: integer
          minimum: 1
          maximum: 10
          description: Number of tickets
        paymentMethod:
          type: string
          description: Payment method
        paymentToken:
          type: string
          description: Payment token
      required:
        - eventId
        - ticketQuantity
        - paymentMethod
        - paymentToken

    ProcessPaymentRequest:
      type: object
      properties:
        bookingId:
          type: string
          description: Booking ID
        paymentMethod:
          type: string
          description: Payment method
        paymentToken:
          type: string
          description: Payment token
      required:
        - bookingId
        - paymentMethod
        - paymentToken

    ValidateQRCodeRequest:
      type: object
      properties:
        qrCodeData:
          type: string
          description: QR code data to validate
      required:
        - qrCodeData

    # Response Schemas
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        uptime:
          type: number
          format: float

    MobileLoginResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            message:
              type: string
            user:
              $ref: '#/components/schemas/MobileUser'
            accessToken:
              type: string
            refreshToken:
              type: string
            expiresIn:
              type: integer
        timestamp:
          type: string
          format: date-time

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            message:
              type: string
            user:
              type: object
              properties:
                id:
                  type: string
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                profilePictureUrl:
                  type: string
                role:
                  type: string
                status:
                  type: string
                emailVerified:
                  type: boolean
                phoneVerified:
                  type: boolean
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                preferences:
                  type: object
            accessToken:
              type: string
            refreshToken:
              type: string
            expiresIn:
              type: integer
        timestamp:
          type: string
          format: date-time

    TokenResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            accessToken:
              type: string
            refreshToken:
              type: string
            expiresIn:
              type: integer
        timestamp:
          type: string
          format: date-time

    MobileEventListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            events:
              type: array
              items:
                $ref: '#/components/schemas/MobileEvent'
            pagination:
              $ref: '#/components/schemas/Pagination'
        timestamp:
          type: string
          format: date-time

    MobileEventResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            event:
              $ref: '#/components/schemas/MobileEvent'
        timestamp:
          type: string
          format: date-time

    CategoryListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            categories:
              type: array
              items:
                $ref: '#/components/schemas/Category'
        timestamp:
          type: string
          format: date-time

    MobileBookingResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            booking:
              $ref: '#/components/schemas/MobileBooking'
        timestamp:
          type: string
          format: date-time

    MobileBookingListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            bookings:
              type: array
              items:
                $ref: '#/components/schemas/MobileBooking'
            pagination:
              $ref: '#/components/schemas/Pagination'
        timestamp:
          type: string
          format: date-time

    CancelBookingResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            message:
              type: string
            booking:
              $ref: '#/components/schemas/MobileBooking'
        timestamp:
          type: string
          format: date-time

    MobilePaymentResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            payment:
              $ref: '#/components/schemas/MobilePayment'
        timestamp:
          type: string
          format: date-time

    MobilePaymentListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            payments:
              type: array
              items:
                $ref: '#/components/schemas/MobilePayment'
            pagination:
              $ref: '#/components/schemas/Pagination'
        timestamp:
          type: string
          format: date-time

    QRCodeValidationResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            isValid:
              type: boolean
            message:
              type: string
            booking:
              $ref: '#/components/schemas/MobileBooking'
        timestamp:
          type: string
          format: date-time

    MobileQRCodeResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            qrCode:
              $ref: '#/components/schemas/MobileQRCode'
        timestamp:
          type: string
          format: date-time

    MobileNotificationListResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            notifications:
              type: array
              items:
                $ref: '#/components/schemas/MobileNotification'
            pagination:
              $ref: '#/components/schemas/Pagination'
        timestamp:
          type: string
          format: date-time

    NotificationReadResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            message:
              type: string
        timestamp:
          type: string
          format: date-time

    # Common Schemas
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        icon:
          type: string
          format: uri

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer
        hasNext:
          type: boolean
        hasPrev:
          type: boolean

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
        timestamp:
          type: string
          format: date-time

tags:
  - name: System
    description: System health and status endpoints
  - name: Authentication
    description: User authentication and authorization
  - name: Events
    description: Event discovery and management
  - name: Bookings
    description: Booking management for attendees
  - name: Payments
    description: Payment processing
  - name: QR Codes
    description: QR code generation and validation
  - name: Notifications
    description: User notifications
  - name: Search
    description: Event search and discovery
